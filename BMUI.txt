import { useState, useEffect } from "react";
import axios from "axios";

export default function BuildingMaintenanceUI() {
  const [file, setFile] = useState(null);
  const [reports, setReports] = useState([]);
  const [loading, setLoading] = useState(false);
  const [search, setSearch] = useState("");
  const [selectedReport, setSelectedReport] = useState(null);

  // Fetch reports from backend
  useEffect(() => {
    axios.get("http://18.119.137.210:8000/files/").then((response) => {
      setReports(response.data.files);
    });
  }, []);

  // Handle file upload
  const handleFileChange = (event) => {
    setFile(event.target.files[0]);
  };

  const handleUpload = async () => {
    if (!file) return alert("Please select an image");
    
    setLoading(true);
    const formData = new FormData();
    formData.append("file", file);

    try {
      const response = await axios.post("https://your-backend-api.com/upload-image/", formData, {
        headers: { "Content-Type": "multipart/form-data" },
      });
      alert("Report generated successfully!");
      setReports([response.data, ...reports]);
    } catch (error) {
      alert("Error uploading image");
      console.error(error);
    }
    setLoading(false);
  };

  // Handle report deletion
  const handleDelete = async (reportId) => {
    if (!window.confirm("Are you sure you want to delete this report?")) return;
    try {
      await axios.delete(`https://your-backend-api.com/delete-report/${reportId}`);
      setReports(reports.filter((report) => report.id !== reportId));
    } catch (error) {
      alert("Error deleting report");
      console.error(error);
    }
  };

  // Filter reports based on search
  const filteredReports = reports.filter((report) => 
    report.report_text.toLowerCase().includes(search.toLowerCase())
  );

  return (
    <div className="container mx-auto p-4">
      <h1 className="text-2xl font-bold mb-4 text-center">Building Maintenance Reports</h1>
      
      <div className="mb-4 flex flex-col items-center gap-4">
        <input type="file" onChange={handleFileChange} className="border p-2 rounded w-1/2" />
        <button 
          onClick={handleUpload} 
          className="bg-blue-500 hover:bg-blue-600 text-white p-2 rounded transition"
          disabled={loading}
        >
          {loading ? "Uploading..." : "Upload Image"}
        </button>
      </div>
      
      <input 
        type="text" 
        placeholder="Search reports..." 
        value={search} 
        onChange={(e) => setSearch(e.target.value)} 
        className="border p-2 rounded w-full mt-4"
      />
      
      <h2 className="text-xl font-bold mt-6">Previous Reports</h2>
      <ul className="mt-2 grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">
        {filteredReports.map((report) => (
          <li key={report.id} className="border p-3 rounded shadow cursor-pointer bg-white hover:shadow-lg transition" onClick={() => setSelectedReport(report)}>
            <img src={report.image_url} alt="Report Image" className="w-full h-40 object-cover rounded" />
            <p className="mt-2"><strong>Report:</strong> {report.report_text.substring(0, 100)}...</p>
            <button 
              className="mt-2 bg-red-500 hover:bg-red-600 text-white p-1 rounded transition w-full"
              onClick={(e) => { e.stopPropagation(); handleDelete(report.id); }}
            >
              Delete
            </button>
          </li>
        ))}
      </ul>

      {selectedReport && (
        <div className="fixed top-0 left-0 w-full h-full bg-gray-800 bg-opacity-75 flex items-center justify-center">
          <div className="bg-white p-6 rounded shadow-lg max-w-lg w-full">
            <h2 className="text-xl font-bold mb-4">Detailed Report</h2>
            <img src={selectedReport.image_url} alt="Selected Report" className="w-full h-auto rounded mb-4" />
            <p><strong>Full Report:</strong> {selectedReport.report_text}</p>
            <button 
              className="mt-4 bg-red-500 hover:bg-red-600 text-white p-2 rounded transition w-full"
              onClick={() => setSelectedReport(null)}
            >
              Close
            </button>
          </div>
        </div>
      )}
    </div>
  );
}
